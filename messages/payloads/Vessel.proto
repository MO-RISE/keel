syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "LocationFix.proto";
import "VoyagePlan.proto";
import "PrimitivesNavigation.proto";

package keelson.primitives;


// Vessel message is combination of sub messages that describe the target

message Vessels {
  google.protobuf.Timestamp timestamp_source = 2;
  repeated Vessel vessels = 1;
}


// Compound message for vessel information
message Vessel {
  // Timestamp closest to when data was produced
  google.protobuf.Timestamp timestamp_source = 1;

  VesselInformation information = 2;

  // Vessel position/location fix
  foxglove.PositionFix position = 3; // Needs future reserch if we should use 
  foxglove.LocationFix location = 4; // position or location

  SpeedThroughWater speed_through_water = 5;
  SpeedOverGround speed_over_ground = 6;
  RateOfTurn rate_of_turn = 6;
  Heading heading = 7;
  NavigationStatus navigation_status = 8;

  VesselCommonReferencePoint common_reference_point = 9;

  repeated VesselDataSource data_source = 10;

}



// VesselDescription is static information about the vessel
message VesselInformation {
  google.protobuf.Timestamp timestamp_source = 1;

  int32 mmsi = 2;
  int32 imo = 3;
  string name = 4;
  string call_sign = 5;
  
  float length_over_all_meters = 6;
  float width_over_all_meters = 7;
  float draft_meters = 8;

  // Type of target according to AIS standard + some additional types identifeid by id number over 100  
  enum VesselType {  
    UNKNOWN = 0;
    WIG = 20;
    FISHING = 30;
    TOWING = 31;
    TOWING_LONG = 32; // Towing longer than 200m or wider than 25m
    DREDGING = 33;
    DIVING = 34;
    MILITARY = 35;
    SAILING = 36;
    PLEASURE = 37;
    HSC = 40; // High speed craft
    PILOT = 50;
    SAR = 51; // Search and rescue
    TUG = 52;
    PORT = 53;
    ANTI_POLLUTION = 54; // Anti-pollution equipment
    LAW_ENFORCEMENT = 55;
    MEDICAL = 58;
    PASSENGER = 60; // Passenger, all ships of this type
    CARGO = 70; // Cargo, all ships of this type
    TANKER = 80; // Tanker, all ships of this type
    OTHER = 90; // Other, all ships of this type
  }

  VesselType type = 9;

  string json_str = 99;
}


message VoyageInformation {
  google.protobuf.Timestamp timestamp_source = 1;

  string departed_country_name = 2; 
  string departed_country_code = 2; 
  string departure_port_name = 3;
  string departure_port_code = 4;

  string destination_country_name = 3;
  string destination_country_code = 4;
  string destination_port_name = 5;
  string destination_port_code = 6; 

  int32 time_to_go_seconds = 7;

  TimeOfDepartureArrival time_of_departure_arrival = 7;
  
  VoyagePlan voyage_plan = 8;

  string json_str = 99;
}


message VesselDataSource {
  // Source where the data was generated [AIS, Radar, etc.]
  enum Source {
    AIS_RADIO_RECEIVER = 0;
    AIS_PROVIDER = 1;
    RADAR = 3;
    LIDAR = 4;
    CAMERA = 5;
    SIMULATION = 6;
    PLATFORM = 7;
  }
  // If sensor fusion is used, multiple data sources can be used
  Source source = 1;
  string description = 2;
  string name = 3;
  string json_str = 99;
}


